{"version":3,"sources":["scripts/main.js"],"names":["waitFor","element","eventName","Promise","resolve","addEventListener","nodeName","id","printMessage","message","elementMessage","document","createElement","classList","add","innerText","body","appendChild","module","exports"],"mappings":";AAAA,aAEA,SAASA,EAAQC,EAASC,GACjB,OAAA,IAAIC,QAAQ,SAACC,GAClBH,EAAQI,iBAAiBH,EAAW,WAClCE,EAAQ,UAAUF,OAAAA,EACKD,KAAAA,mBAAAA,OAAAA,EAAQK,SAAiBL,UAAAA,OAAAA,EAAQM,GADjD,UAMb,IAAMC,EAAe,SAACC,GACdC,IAAAA,EAAiBC,SAASC,cAAc,OAE9CF,EAAeG,UAAUC,IAAI,WAC7BJ,EAAeK,UAAYN,EAC3BE,SAASK,KAAKC,YAAYP,IAG5BQ,OAAOC,QAAU,CACfnB,QAAAA,EACAQ,aAAAA","file":"main.283f0145.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nfunction waitFor(element, eventName) {\n  return new Promise((resolve) => {\n    element.addEventListener(eventName, () => {\n      resolve(`It was ${eventName} `\n        + `on the element: ${element.nodeName}, id: ${element.id}.`);\n    });\n  });\n}\n\nconst printMessage = (message) => {\n  const elementMessage = document.createElement('div');\n\n  elementMessage.classList.add('message');\n  elementMessage.innerText = message;\n  document.body.appendChild(elementMessage);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}